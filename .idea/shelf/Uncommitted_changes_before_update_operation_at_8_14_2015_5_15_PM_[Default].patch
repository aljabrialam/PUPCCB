Index: app/src/main/java/pupccb/solutionsresource/com/helper/OnlineHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/pupccb/solutionsresource/com/helper/OnlineHelper.java	(revision cf1215e63aa386c56ae6fa7450c1b0aec0b4b9c2)
+++ app/src/main/java/pupccb/solutionsresource/com/helper/OnlineHelper.java	(revision )
@@ -7,8 +7,11 @@
 import com.octo.android.robospice.request.listener.RequestListener;
 
 import pupccb.solutionsresource.com.helper.communicator.OnlineCommunicator;
+import pupccb.solutionsresource.com.helper.request.RegistrationRequest;
 import pupccb.solutionsresource.com.helper.request.SessionRequest;
 import pupccb.solutionsresource.com.model.Login;
+import pupccb.solutionsresource.com.model.RegistrationDetails;
+import pupccb.solutionsresource.com.model.RegistrationResponse;
 import pupccb.solutionsresource.com.model.Session;
 
 /**
@@ -48,6 +51,40 @@
         public void onRequestSuccess(Session session)  {
             stopSpiceManager();
             controller.loginResult(session,login);
+        }
+    }
+
+
+    @Override
+    public void register(Controller controller, Activity activity,RegistrationDetails registrationDetails, Controller.MethodTypes methodTypes) {
+        this.controller = controller;
+        performRegistrationRequest(activity, registrationDetails, methodTypes);
+    }
+
+    private void performRegistrationRequest(Activity activity, RegistrationDetails registrationDetails, Controller.MethodTypes methodTypes) {
+        startSpiceManager(activity);
+        RegistrationRequest registrationRequest =  new RegistrationRequest(registrationDetails);
+        spiceManager.execute(registrationRequest, registrationRequest.createCacheKey(), DurationInMillis.ALWAYS_EXPIRED, new registrationListener(registrationDetails, methodTypes));
+    }
+
+    public class registrationListener implements RequestListener<RegistrationResponse> {
+        private RegistrationDetails registrationDetails;
+        private Controller.MethodTypes methodTypes;
+
+        public registrationListener(RegistrationDetails registrationDetails, Controller.MethodTypes methodTypes) {
+            this.registrationDetails = registrationDetails;
+            this.methodTypes = methodTypes;
+        }
+
+        @Override
+        public void onRequestFailure(SpiceException spiceException) {
+            stopSpiceManager();
+        }
+
+        @Override
+        public void onRequestSuccess(RegistrationResponse registrationResponse)  {
+            stopSpiceManager();
+            controller.registerResult(registrationResponse,registrationDetails);
         }
     }
 }
Index: app/src/main/res/layout/toolbar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/toolbar.xml	(revision cf1215e63aa386c56ae6fa7450c1b0aec0b4b9c2)
+++ app/src/main/res/layout/toolbar.xml	(revision )
@@ -2,5 +2,5 @@
     style="@style/ToolBarStyle"
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
-    android:background="?attr/colorPrimaryDark"
+    android:background="?attr/colorPrimary"
     android:minHeight="@dimen/abc_action_bar_default_height_material" />
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(revision cf1215e63aa386c56ae6fa7450c1b0aec0b4b9c2)
+++ app/src/main/res/values/dimens.xml	(revision )
@@ -37,7 +37,7 @@
 
     <dimen name="note_spacing">4dp</dimen>
     <dimen name="note_content_spacing">16dp</dimen>
-    <dimen name="note_corner_radius">2dp</dimen>
+    <dimen name="note_corner_radius">0dp</dimen>
     <dimen name="note_textsize">14sp</dimen>
     <dimen name="note_title_textsize">24sp</dimen>
 
Index: app/src/main/java/pupccb/solutionsresource/com/activity/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/pupccb/solutionsresource/com/activity/Main.java	(revision cf1215e63aa386c56ae6fa7450c1b0aec0b4b9c2)
+++ app/src/main/java/pupccb/solutionsresource/com/activity/Main.java	(revision )
@@ -2,17 +2,20 @@
 
 import android.content.Intent;
 import android.content.SharedPreferences;
+import android.content.res.Configuration;
 import android.os.Bundle;
 import android.support.v7.app.AppCompatActivity;
 import android.view.View;
 import android.widget.EditText;
 import android.widget.Toast;
 
-import com.mobsandgeeks.saripaar.Rule;
+import com.mobsandgeeks.saripaar.ValidationError;
 import com.mobsandgeeks.saripaar.Validator;
+import com.mobsandgeeks.saripaar.annotation.Email;
 import com.mobsandgeeks.saripaar.annotation.Password;
-import com.mobsandgeeks.saripaar.annotation.Required;
 
+import java.util.List;
+
 import pupccb.solutionsresource.com.R;
 import pupccb.solutionsresource.com.helper.BaseHelper;
 import pupccb.solutionsresource.com.helper.Controller;
@@ -29,11 +32,9 @@
     private SharedPreferences sharedPreferences;
 
     private boolean onGoing;
-    @Required(order = 1, message = "Client Secret is required")
-    private EditText editTextClientSecret;
-    @Required(order = 2, message = "Username is required")
+    @Email
     private EditText editTextUsername;
-    @Password(order = 3)
+    @Password(message = "Password is required")
     private EditText editTextPassword;
 
 
@@ -41,12 +42,23 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         View view = getLayoutInflater().inflate(R.layout.activity_login, null);
+
+        setScreenOrienttion(view);
         setContentView(view);
-        start();
+        startController();
         findViewById(view);
     }
 
-    private void start() {
+    private void setScreenOrienttion(View view) {
+        int orientation = getResources().getConfiguration().orientation;
+        if (orientation == Configuration.ORIENTATION_LANDSCAPE) {
+            view.setBackgroundResource(R.drawable.landscape_bg);
+        } else {
+            view.setBackgroundResource(R.drawable.portrait_bg);
+        }
+    }
+
+    private void startController() {
         controller = new Controller(new OnlineHelper());
     }
 
@@ -59,10 +71,8 @@
         validator = new Validator(this);
         validator.setValidationListener(this);
         sharedPreferences = BaseHelper.getSharedPreference(Main.this);
-
-
-        editTextUsername =(EditText)view.findViewById(R.id.editTextUsername);
+        editTextUsername = (EditText) view.findViewById(R.id.editTextEmail);
-        editTextPassword = (EditText)view.findViewById(R.id.editTextPassword);
+        editTextPassword = (EditText) view.findViewById(R.id.editTextPassword);
         setTouchNClick(R.id.btnLogin);
         setTouchNClick(R.id.btnReg);
     }
@@ -76,20 +86,16 @@
     private void TemporatyLogin() {
         editTextUsername.setText("data-collector");
         editTextPassword.setText("data-collector");
-        editTextClientSecret.setText("12345");
     }
 
-    private void clearAlertDialog() {
+    private void clearTextView() {
         editTextUsername.setText("");
         editTextPassword.setText("");
-        editTextClientSecret.setText("");
-        editTextClientSecret.requestFocus();
     }
 
 
     public void login(Login login) {
         onGoing = true;
-
         controller.login(this, login);
     }
 
@@ -99,8 +105,6 @@
         SharedPreferences.Editor editSharedPreference = BaseHelper.getEditSharedPreference(this);
         editSharedPreference.putString("access_token", session.getAccess_token());
         editSharedPreference.putString("username", login.getUsername());
-        editSharedPreference.putString("client_id", login.getClient_id());
-        editSharedPreference.putString("client_secret", login.getClient_secret());
         editSharedPreference.putBoolean("logged_in", true);
         editSharedPreference.apply();
 
@@ -110,54 +114,49 @@
 
     @Override
     public void onValidationSucceeded() {
-        if (!onGoing) {
-            login(new Login(
-                    editTextUsername.getText().toString(),
-                    editTextPassword.getText().toString(),
-                    editTextClientSecret.getText().length() > 0 ?
-                            editTextUsername.getText().toString() :
-                            sharedPreferences.getString("client_id", null),
-                    editTextClientSecret.getText().length() > 0 ?
-                            editTextClientSecret.getText().toString() :
-                            sharedPreferences.getString("client_secret", null),
-                    "data_collector",
-                    "password"));
+        startActivity(new Intent(this, NavigationDrawer.class));
+        this.finish();
+//        if (!onGoing) {
+//            login(new Login(editTextUsername.getText().toString(),
+//                            editTextPassword.getText().toString()));
+//        }
-        }
+    }
-    }
 
     @Override
-    public void onValidationFailed(View failedView, Rule<?> failedRule) {
-        String message = failedRule.getFailureMessage();
-        if (failedView instanceof EditText) {
-            failedView.requestFocus();
-            ((EditText) failedView).setError(message);
+    public void onValidationFailed(List<ValidationError> errors) {
+        for (ValidationError error : errors) {
+            View view = error.getView();
+            String message = error.getCollatedErrorMessage(this);
+
+            // Display error messages ;)
+            if (view instanceof EditText) {
+                ((EditText) view).setError(message);
-        } else {
+            } else {
-            Toast.makeText(this, message, Toast.LENGTH_SHORT).show();
+                Toast.makeText(this, message, Toast.LENGTH_LONG).show();
-        }
-    }
+            }
+        }
+    }
 
     public void onClick(View view) {
 
-        if(view.getId() == R.id.btnLogin) {
+        if (view.getId() == R.id.btnLogin) {
-            startActivity(new Intent(this, NavigationDrawer.class));
-            this.finish();
-        }
-        else if (view.getId() == R.id.btnReg){
+            validator.validate();
+        } else if (view.getId() == R.id.btnReg) {
             startActivity(new Intent(this, Registration.class));
             this.finish();
         }
     }
 
 
-    public View setClick(int var1) {
-        View var2 = this.findViewById(var1);
-        var2.setOnClickListener(this);
-        return var2;
+    public View setClick(int btn) {
+        View view = this.findViewById(btn);
+        view.setOnClickListener(this);
+        return view;
     }
 
-    public View setTouchNClick(int var1) {
-        View var2 = this.setClick(var1);
-        var2.setOnTouchListener(TOUCH);
-        return var2;
+    public View setTouchNClick(int btn) {
+        View view = this.setClick(btn);
+        view.setOnTouchListener(TOUCH);
+        return view;
     }
 }
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision cf1215e63aa386c56ae6fa7450c1b0aec0b4b9c2)
+++ app/src/main/res/values/styles.xml	(revision )
@@ -107,6 +107,18 @@
         <item name="cardBackgroundColor">@color/background_card</item>
         <item name="cardCornerRadius">@dimen/note_corner_radius</item>
     </style>
+
+    <style name="Widget.MaterialSheetFab.Ticket" parent="">
+        <item name="android:layout_width">wrap_content</item>
+        <item name="android:layout_height">wrap_content</item>
+        <item name="android:layout_margin">@dimen/note_spacing</item>
+        <item name="android:foreground">?selectableItemBackground</item>
+        <item name="android:clickable">true</item>
+
+        <item name="cardBackgroundColor">@color/background_card</item>
+        <item name="cardCornerRadius">@dimen/note_corner_radius</item>
+    </style>
+
     <style name="Widget.MaterialSheetFab.Note.List" parent="">
         <item name="android:layout_width">match_parent</item>
         <item name="android:layout_height">match_parent</item>
Index: app/src/main/java/pupccb/solutionsresource/com/helper/request/RegistrationRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/pupccb/solutionsresource/com/helper/request/RegistrationRequest.java	(revision )
+++ app/src/main/java/pupccb/solutionsresource/com/helper/request/RegistrationRequest.java	(revision )
@@ -0,0 +1,36 @@
+package pupccb.solutionsresource.com.helper.request;
+
+import com.octo.android.robospice.request.retrofit.RetrofitSpiceRequest;
+
+import pupccb.solutionsresource.com.helper.service.RegistrationService;
+import pupccb.solutionsresource.com.model.RegistrationDetails;
+import pupccb.solutionsresource.com.model.RegistrationResponse;
+
+/**
+ * Created by User on 7/16/2015.
+ */
+public class RegistrationRequest extends RetrofitSpiceRequest<RegistrationResponse, RegistrationService> {
+
+    private RegistrationDetails register;
+
+    public RegistrationRequest(RegistrationDetails register) {
+        super(RegistrationResponse.class, RegistrationService.class);
+        this.register = register;
+    }
+
+    @Override
+    public RegistrationResponse loadDataFromNetwork() throws Exception {
+        return getService().register(
+                register.getFirstname(),
+                register.getMiddlename(),
+                register.getLasrname(),
+                register.getContactnumber(),
+                register.getEmailaddress(),
+                register.getPassword()
+        );
+    }
+
+    public String createCacheKey() {
+        return "SessionRequest" + register.getEmailaddress();
+    }
+}
Index: app/src/main/java/pupccb/solutionsresource/com/activity/NavigationDrawer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/pupccb/solutionsresource/com/activity/NavigationDrawer.java	(revision cf1215e63aa386c56ae6fa7450c1b0aec0b4b9c2)
+++ app/src/main/java/pupccb/solutionsresource/com/activity/NavigationDrawer.java	(revision )
@@ -60,7 +60,7 @@
             case 1:
                 mTitle = "Home";
                 setTitle(mTitle);
-                fragmentToReplace = new Home();
+                fragmentToReplace = new Home().newInstance();
                 break;
             case 2:
                 mTitle = "My Ticket";
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision cf1215e63aa386c56ae6fa7450c1b0aec0b4b9c2)
+++ app/src/main/res/layout/activity_main.xml	(revision )
@@ -44,7 +44,7 @@
         <!-- android:layout_marginTop="?android:attr/actionBarSize"-->
         <fragment
             android:id="@+id/fragment_drawer"
-            android:name="ccb.solutionsresource.com.drawer.NavigationDrawerFragment"
+            android:name="pupccb.solutionsresource.com.drawer.NavigationDrawerFragment"
             android:layout_width="@dimen/navigation_drawer_width"
             android:layout_height="match_parent"
             android:layout_gravity="start"
Index: app/src/main/java/pupccb/solutionsresource/com/helper/Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/pupccb/solutionsresource/com/helper/Controller.java	(revision cf1215e63aa386c56ae6fa7450c1b0aec0b4b9c2)
+++ app/src/main/java/pupccb/solutionsresource/com/helper/Controller.java	(revision )
@@ -3,8 +3,11 @@
 import android.app.Activity;
 
 import pupccb.solutionsresource.com.activity.Main;
+import pupccb.solutionsresource.com.activity.Registration;
 import pupccb.solutionsresource.com.helper.communicator.OnlineCommunicator;
 import pupccb.solutionsresource.com.model.Login;
+import pupccb.solutionsresource.com.model.RegistrationDetails;
+import pupccb.solutionsresource.com.model.RegistrationResponse;
 import pupccb.solutionsresource.com.model.Session;
 
 /**
@@ -17,11 +20,12 @@
         this.onlineCommunicator = onlineCommunicator;
     }
     public enum MethodTypes{
-        LOGIN
+        LOGIN, REGISTER
     }
 
     private Activity activity;
     private Login login;
+    private RegistrationDetails registrationDetails;
 
     public void login(Activity activity,Login login){
         this.activity = activity;
@@ -32,6 +36,18 @@
     public void loginResult(Session session, Login login){
         if(activity instanceof Main){
             ((Main) activity).loginResult(session, login);
+        }
+    }
+
+    public void register(Activity activity,RegistrationDetails registrationDetails){
+        this.activity = activity;
+        this.registrationDetails = registrationDetails;
+        onlineCommunicator.register(this,activity,registrationDetails, MethodTypes.REGISTER);
+    }
+
+    public void registerResult(RegistrationResponse registrationResponse, RegistrationDetails registrationDetails){
+        if(activity instanceof Registration){
+            ((Registration) activity).registerResult(registrationResponse, registrationDetails);
         }
     }
 }
Index: app/src/main/java/pupccb/solutionsresource/com/fragment/Ticket.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/pupccb/solutionsresource/com/fragment/Ticket.java	(revision cf1215e63aa386c56ae6fa7450c1b0aec0b4b9c2)
+++ app/src/main/java/pupccb/solutionsresource/com/fragment/Ticket.java	(revision )
@@ -54,10 +54,10 @@
 
     private void initializeData(){
         tickets = new ArrayList<>();
-        tickets.add(new pupccb.solutionsresource.com.model.Ticket("Open", "Lorem Ipsum", "BIR"));
-        tickets.add(new pupccb.solutionsresource.com.model.Ticket("Resolved", "Lorem Ipsum", "PhilHealth"));
-        tickets.add(new pupccb.solutionsresource.com.model.Ticket("Resolved", "Lorem Ipsum","DOH"));
-        tickets.add(new pupccb.solutionsresource.com.model.Ticket("Resolved", "Lorem Ipsum", "PhilHealth"));
-        tickets.add(new pupccb.solutionsresource.com.model.Ticket("Open", "Lorem Ipsum", "BIR"));
+        tickets.add(new pupccb.solutionsresource.com.model.Ticket("Open", "Lorem Ipsum", "BIR", R.color.open));
+        tickets.add(new pupccb.solutionsresource.com.model.Ticket("Resolved", "Lorem Ipsum", "PhilHealth", R.color.resolved));
+        tickets.add(new pupccb.solutionsresource.com.model.Ticket("Resolved", "Lorem Ipsum","DOH", R.color.resolved));
+        tickets.add(new pupccb.solutionsresource.com.model.Ticket("Ongoing", "Lorem Ipsum", "PhilHealth", R.color.ongoing));
+        tickets.add(new pupccb.solutionsresource.com.model.Ticket("Open", "Lorem Ipsum", "BIR", R.color.open));
     }
 }
Index: app/src/main/res/layout/fragment_my_ticket.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_my_ticket.xml	(revision cf1215e63aa386c56ae6fa7450c1b0aec0b4b9c2)
+++ app/src/main/res/layout/fragment_my_ticket.xml	(revision )
@@ -13,12 +13,11 @@
         android:orientation="vertical"
         android:animateLayoutChanges="true">
 
-
         <com.astuetz.PagerSlidingTabStrip
             android:id="@+id/pagerSlidingTabStrip"
             android:layout_width="match_parent"
             android:layout_height="50dp"
-            android:background="@color/tab_color"
+            android:background="?attr/colorPrimary"
             app:pstsShouldExpand="true"/>
 
         <android.support.v4.view.ViewPager
@@ -28,6 +27,4 @@
             android:background="@color/view_pager_color"/>
 
     </LinearLayout>
-
-
 </LinearLayout>
\ No newline at end of file
